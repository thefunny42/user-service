apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "userservice.fullname" . }}
  labels:
    {{- include "userservice.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "userservice.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: {{ .Values.service.port | quote }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "userservice.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "userservice.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: USER_SERVICE_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "userservice.fullname" . }}
                  key: user_service_database
            - name: USER_SERVICE_ISSUER
              valueFrom:
                configMapKeyRef:
                  name: {{ include "userservice.fullname" . }}
                  key: user_service_issuer
            {{- if .Values.jwksUrl }}
            - name: USER_SERVICE_JWKS_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "userservice.fullname" . }}
                  key: user_service_jwks_url
            {{- end }}
            {{- if .Values.audience }}
            - name: USER_SERVICE_AUDIENCE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "userservice.fullname" . }}
                  key: user_service_audience
            {{- end }}
            - name: AUTHORIZATION_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "userservice.fullname" . }}
                  key: authorization_endpoint
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if not .Values.jwksUrl }}
          volumeMounts:
            - name: secrets
              readOnly: true
              mountPath: /app/conf
          {{- end }}
      {{- if not .Values.jwksUrl }}
      volumes:
        - name: secrets
          secret:
            secretName: {{ include "userservice.fullname" . }}
            items:
            - key: key
              path: user_service_key
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
