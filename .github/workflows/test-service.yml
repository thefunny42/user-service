name: Test and build service
on:
  push:
    paths-ignore:
      - "charts/**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    container: python:3.12-alpine
    services:
      database:
        image: mongo:7-jammy
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: apk add --no-cache git gcc linux-headers musl-dev shadow pipx
      - name: Install Hatch
        run: |
          pipx install hatch
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        env:
          PIPX_DEFAULT_PYTHON: /usr/local/bin/python3
      - name: Code Analysis
        run: hatch fmt --check
      - name: Test
        run: hatch test --cover
        env:
          DEFAULT_DATABASE_URL: mongodb://database:27017/users
  build:
    runs-on: ubuntu-latest
    needs: [test]
    permissions:
      contents: read
      attestations: write
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.description=User service
            org.opencontainers.image.licenses=BSD-2-Clause
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
